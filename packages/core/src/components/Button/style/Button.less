@import '../../../styles/index.less';

@acmeBtnPrefix: acme-btn;

@default-width: 104px;

// 高度变量
@default-height: 40px;
@large-height: 48px;
@small-height: 32px;

@default-border-radius: 4px;
@default-font-size: 14px;
@large-font-size: 16px;
@default-line-height: 22px;

@transparent: transparent;

.@{acmeBtnPrefix} {
  display: inline-flex;
  justify-content: center;
  align-items: center;
  width: fit-content;
  padding: 0 24px;
  border-radius: @default-border-radius;
  font-size: @default-font-size;
  line-height: @default-line-height;
  box-sizing: border-box;
  cursor: pointer;
}

.contained-primary-hover() {
  &:hover {
    background-color: @con-bg-primary-hover;
    border-color: @con-bg-primary-hover;
  }
  &:active,
  &:focus {
    background-color: @con-bg-primary-active;
    border-color: @con-bg-primary-active;
  }
}
.contained-danger-hover() {
  &:hover {
    background-color: @con-bg-danger-hover;
    border-color: @con-bg-danger-hover;
  }
  &:active,
  &:focus {
    background-color: @con-bg-danger-active;
    border-color: @con-bg-danger-active;
  }
}
.other-hover() {
  &:hover {
    background-color: @con-bg-secondary-hover;
  }
  &:active,
  &:focus {
    background-color: @con-bg-secondary-active;
  }
}

// 类型按钮分区
.@{acmeBtnPrefix}-contained-primary {
  color: @con-bg-secondary;
  background-color: @con-bg-primary;
  border: 1px solid @con-bg-primary;
  .contained-primary-hover();
}

.@{acmeBtnPrefix}-outlined-primary {
  color: @con-bg-primary;
  background-color: @con-bg-secondary;
  border: 1px solid @con-bg-primary;
  .other-hover;
}

.@{acmeBtnPrefix}-minimal-primary {
  // 文字按钮无大小属性, 所以无高度设置
  height: unset !important;
  padding: 0 4px;
  color: @con-bg-primary;
  background-color: @transparent;
  border: 1px solid @@transparent;
  .other-hover();
}

// 在类型上再根据颜色区分（主色就是基础的，👇是danger类型）
.@{acmeBtnPrefix}-contained-danger {
  color: @con-bg-secondary;
  background-color: @con-bg-danger;
  border: 1px solid @con-bg-danger;
  .contained-danger-hover();
}

.@{acmeBtnPrefix}-outlined-danger {
  color: @con-bg-danger;
  background-color: @con-bg-secondary;
  border: 1px solid @con-bg-danger;
  .other-hover();
}

.@{acmeBtnPrefix}-minimal-danger {
  // 文字按钮无大小属性, 所以无高度设置
  height: unset !important;
  padding: 0 4px;
  color: @con-bg-danger;
  background-color: @transparent;
  border: 1px solid @@transparent;
  .other-hover();
}

// 按钮size属性，仅仅用来控制高度和字号，可以单独抽取样式类覆盖base类。无其他副作用
.@{acmeBtnPrefix}-default {
  height: @default-height;
}

.@{acmeBtnPrefix}-large {
  height: @large-height;
  font-size: @large-font-size;
}

.@{acmeBtnPrefix}-small {
  height: @small-height;
}

// ghost属性优先级高于color属性！所以当属性设置ghost时，danger属性不生效
.contained-ghost-hover() {
  &:hover {
    background-color: #f4f4f4;
  }
  &:active,
  &:focus {
    background-color: #eee;
  }
}
.other-ghost-hov {
  &:hover {
    background-color: rgba(255, 255, 255, 0.1);
  }
  &:active,
  &:focus {
    background-color: rgba(255, 255, 255, 0.2);
  }
}

.@{acmeBtnPrefix}-contained-ghost {
  color: @con-bg-primary;
  background-color: @con-bg-secondary;
  border: 1px solid @con-bg-primary;
  .contained-ghost-hover();
}

.@{acmeBtnPrefix}-outlined-ghost {
  color: @con-bg-secondary;
  background-color: @transparent;
  border: 1px solid @con-bg-secondary;
  .other-ghost-hov();
}

.@{acmeBtnPrefix}-minimal-ghost {
  color: @con-bg-secondary;
  background-color: @transparent;
  border: 1px solid @transparent;
  .other-ghost-hov();
}

// disabled属性，整体透明度设置为 50%;
.@{acmeBtnPrefix}-disabled {
  opacity: 0.5;
  cursor: not-allowed;
  pointer-events: none; // 有IE兼容性问题
}

// loading属性，整体透明度设置为 80%;
.@{acmeBtnPrefix}-loading {
  opacity: 0.8;
  cursor: not-allowed;
  pointer-events: none; // 有IE兼容性问题
}

// fullWidth属性
.@{acmeBtnPrefix}-full {
  width: 100%;
}

// loading svg 动画设置
.@{acmeBtnPrefix}-loading-svg {
  width: 16px;
  height: 16px;
  margin-right: 4px;
  animation: loadingRotate 1s linear infinite;
}

// 旋转动画
@keyframes loadingRotate {
  0% {
    -webkit-transform: rotate(0deg);
  }
  50% {
    -webkit-transform: rotate(180deg);
  }
  100% {
    -webkit-transform: rotate(360deg);
  }
}
