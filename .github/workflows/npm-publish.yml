# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://help.github.com/actions/language-and-framework-guides/publishing-nodejs-packages

name: Manual Publish(ÊâãÂä®ÂèëÂ∏É)

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'To release (e.g., major | minor | patch | premajor | preminor | prepatch | prerelease | x.x.x)'
        required: false
      parameter_for_publish:
        description: 'parameter for publish'
        required: false

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: cache node_modules
        uses: actions/cache@v2
        id: yarn_cache
        with:
          path: '**/node_modules'
          key: modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            modules-${{ hashFiles('**/yarn.lock') }}
            modules-
      - name: install node_modules if cache missed
        if: steps.yarn_cache.outputs.cache-hit != 'true'
        run: yarn install --use-workspaces

  test:
    needs: [setup]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: restore node_modules
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            modules-${{ hashFiles('**/yarn.lock') }}
            modules-
      - name: Unit Test
        run: yarn lerna run test:all --stream

  publish:
    needs: [setup, test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false
          fetch-depth: "0"
      - name: restore node_modules
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            modules-${{ hashFiles('**/yarn.lock') }}
            modules-
      - name: Git Identity
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/$GITHUB_REPOSITORY
        env:
          GITHUB_TOKEN: ${{ secrets.FE_GH_TOKEN }}
      - name: build
        run: yarn lerna:build
      - name: publish
        run: yarn lerna:publish --yes --legacy-auth ${NPM_SECRET} --create-release github ${{ github.event.inputs.parameter_for_publish }} ${{ github.event.inputs.version }}

        env:
          GITHUB_TOKEN: ${{ secrets.FE_GH_TOKEN }}
          GH_TOKEN: ${{ secrets.FE_GH_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_SECRET: ${{ secrets.NPM_SECRET }}

  docs-publish:
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: [publish]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Restore dependencies üîÑ
        uses: actions/cache@v2
        id: yarn_cache
        with:
          path: "**/node_modules"
          key: modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            modules-${{ hashFiles('**/yarn.lock') }}
            modules-

      - name: Build üîß
        run: |
          cd packages/documents
          yarn build

      - name: Deploy üöÄ
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs
#           destination_dir: docs
          publish_branch: gh-pages
#           keep_files: true
          full_commit_message: Publish docs with npm publish v${{ github.event.inputs.version }} by ${{ github.actor }}
          user_name: github-actions[bot]
          user_email: github-actions[bot]@users.noreply.github.com
